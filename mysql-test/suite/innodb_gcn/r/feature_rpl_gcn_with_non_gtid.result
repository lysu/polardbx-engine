include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
###############################
# Non MTS mode
###############################
[connection slave]
include/stop_slave.inc [FOR CHANNEL 'test']
SET GLOBAL replica_parallel_workers = 0;
include/start_slave.inc [FOR CHANNEL 'test']
[connection master]
create table tt (id int);
###############################
# sync master's sys_gcn with slave's
###############################
[connection master]
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
begin;
insert into tt values (1);
commit;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [actual_sys_gcn == expect_sys_gcn]
[connection master]
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
###############################
# Case 1: Normal trx.
###############################
[connection master]
begin;
insert into tt values (1);
commit;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [actual_sys_gcn == expect_sys_gcn]
[connection master]
set global xa_detach_on_prepare = true;
###############################
# Case 2: Detached XA + Commit
###############################
[connection master]
xa begin '1_no_mts_with_no_gitd';
insert into tt values (1);
xa end '1_no_mts_with_no_gitd';
xa prepare '1_no_mts_with_no_gitd';
xa commit '1_no_mts_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 3: Detached XA + Rollback
###############################
[connection master]
xa begin '2_no_mts_with_no_gitd';
insert into tt values (2);
xa end '2_no_mts_with_no_gitd';
xa prepare '2_no_mts_with_no_gitd';
xa rollback '2_no_mts_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 4: Detached XA One Phase
###############################
[connection master]
xa begin '3_no_mts_with_no_gitd';
insert into tt values (3);
xa end '3_no_mts_with_no_gitd';
xa commit '3_no_mts_with_no_gitd' one phase;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
[connection master]
set global xa_detach_on_prepare = false;
###############################
# Case 5: Attached XA + Commit
###############################
[connection master]
xa begin '4_no_mts_with_no_gitd';
insert into tt values (4);
xa end '4_no_mts_with_no_gitd';
xa prepare '4_no_mts_with_no_gitd';
xa commit '4_no_mts_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 6: Attached XA + Rollback
###############################
[connection master]
xa begin '5_no_mts_with_no_gitd';
insert into tt values (5);
xa end '5_no_mts_with_no_gitd';
xa prepare '5_no_mts_with_no_gitd';
xa rollback '5_no_mts_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# cleanup
###############################
[connection master]
set global xa_detach_on_prepare = default;
drop table tt;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
###############################
# MTS by DATABASE
###############################
[connection slave]
include/stop_slave.inc [FOR CHANNEL 'test']
SET GLOBAL replica_preserve_commit_order = 0;
SET GLOBAL replica_parallel_type = 'DATABASE';
SET GLOBAL replica_parallel_workers = 4;
include/start_slave.inc [FOR CHANNEL 'test']
[connection master]
create table tt (id int);
###############################
# sync master's sys_gcn with slave's
###############################
[connection master]
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
begin;
insert into tt values (1);
commit;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [actual_sys_gcn == expect_sys_gcn]
[connection master]
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
###############################
# Case 1: Normal trx.
###############################
[connection master]
begin;
insert into tt values (1);
commit;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [actual_sys_gcn == expect_sys_gcn]
[connection master]
set global xa_detach_on_prepare = true;
###############################
# Case 2: Detached XA + Commit
###############################
[connection master]
xa begin '1_mts_by_db_with_no_gitd';
insert into tt values (1);
xa end '1_mts_by_db_with_no_gitd';
xa prepare '1_mts_by_db_with_no_gitd';
xa commit '1_mts_by_db_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 3: Detached XA + Rollback
###############################
[connection master]
xa begin '2_mts_by_db_with_no_gitd';
insert into tt values (2);
xa end '2_mts_by_db_with_no_gitd';
xa prepare '2_mts_by_db_with_no_gitd';
xa rollback '2_mts_by_db_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 4: Detached XA One Phase
###############################
[connection master]
xa begin '3_mts_by_db_with_no_gitd';
insert into tt values (3);
xa end '3_mts_by_db_with_no_gitd';
xa commit '3_mts_by_db_with_no_gitd' one phase;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
[connection master]
set global xa_detach_on_prepare = false;
###############################
# Case 5: Attached XA + Commit
###############################
[connection master]
xa begin '4_mts_by_db_with_no_gitd';
insert into tt values (4);
xa end '4_mts_by_db_with_no_gitd';
xa prepare '4_mts_by_db_with_no_gitd';
xa commit '4_mts_by_db_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 6: Attached XA + Rollback
###############################
[connection master]
xa begin '5_mts_by_db_with_no_gitd';
insert into tt values (5);
xa end '5_mts_by_db_with_no_gitd';
xa prepare '5_mts_by_db_with_no_gitd';
xa rollback '5_mts_by_db_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# cleanup
###############################
[connection master]
set global xa_detach_on_prepare = default;
drop table tt;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
###############################
# MTS by Logical_clock
###############################
[connection slave]
include/stop_slave.inc [FOR CHANNEL 'test']
SET GLOBAL replica_preserve_commit_order = default;
SET GLOBAL replica_parallel_type = 'LOGICAL_CLOCK';
SET GLOBAL replica_parallel_workers = 4;
include/start_slave.inc [FOR CHANNEL 'test']
[connection master]
create table tt (id int);
###############################
# sync master's sys_gcn with slave's
###############################
[connection master]
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
begin;
insert into tt values (1);
commit;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [actual_sys_gcn == expect_sys_gcn]
[connection master]
SET @base_seq = (SELECT CAST(variable_value AS UNSIGNED) FROM performance_schema.global_status WHERE variable_name = 'Lizard_current_gcn');
###############################
# Case 1: Normal trx.
###############################
[connection master]
begin;
insert into tt values (1);
commit;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [actual_sys_gcn == expect_sys_gcn]
[connection master]
set global xa_detach_on_prepare = true;
###############################
# Case 2: Detached XA + Commit
###############################
[connection master]
xa begin '1_mts_by_lc_with_no_gitd';
insert into tt values (1);
xa end '1_mts_by_lc_with_no_gitd';
xa prepare '1_mts_by_lc_with_no_gitd';
xa commit '1_mts_by_lc_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 3: Detached XA + Rollback
###############################
[connection master]
xa begin '2_mts_by_lc_with_no_gitd';
insert into tt values (2);
xa end '2_mts_by_lc_with_no_gitd';
xa prepare '2_mts_by_lc_with_no_gitd';
xa rollback '2_mts_by_lc_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 4: Detached XA One Phase
###############################
[connection master]
xa begin '3_mts_by_lc_with_no_gitd';
insert into tt values (3);
xa end '3_mts_by_lc_with_no_gitd';
xa commit '3_mts_by_lc_with_no_gitd' one phase;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
[connection master]
set global xa_detach_on_prepare = false;
###############################
# Case 5: Attached XA + Commit
###############################
[connection master]
xa begin '4_mts_by_lc_with_no_gitd';
insert into tt values (4);
xa end '4_mts_by_lc_with_no_gitd';
xa prepare '4_mts_by_lc_with_no_gitd';
xa commit '4_mts_by_lc_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# Case 6: Attached XA + Rollback
###############################
[connection master]
xa begin '5_mts_by_lc_with_no_gitd';
insert into tt values (5);
xa end '5_mts_by_lc_with_no_gitd';
xa prepare '5_mts_by_lc_with_no_gitd';
xa rollback '5_mts_by_lc_with_no_gitd';
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
[connection slave]
include/assert.inc [expect_gcn == actual_gcn]
###############################
# cleanup
###############################
[connection master]
set global xa_detach_on_prepare = default;
drop table tt;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'test']
###############################
# Restore variables
###############################
[connection slave]
include/stop_slave.inc [FOR CHANNEL 'test']
SET GLOBAL replica_preserve_commit_order = default;
SET GLOBAL replica_parallel_type = default;
SET GLOBAL replica_parallel_workers = default;
include/start_slave.inc [FOR CHANNEL 'test']
[connection master]
include/rpl_end.inc
