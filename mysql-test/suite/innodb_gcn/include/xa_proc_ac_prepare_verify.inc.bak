# ==== Purpose ====
# Check that the result of the query from dbms_xa.ac_prepare() is as expected.

# ==== Usage ====
# --let $expect_gcn=10000
# --let $expect_csr= ASSIGNED_GCN
# --let $my_xid='1','',1
# --let $ac_args=1,1,$pre_commit_gcn

# Parameters
# $expect_gcn
#   If set, gcn is checked to see if it is as expected.
# $expect_csr
#   if set, CSR(AUTOMATIC_GCN/ASSIGNED_GCN) is checked to see if it is as expected.
# $my_xid
#   XID.
# $ac_args
#   N_BRANCH, N_LOCAL_BRANCH, PRE_COMMIT_GCN

--echo call dbms_xa.ac_prepare($my_xid, #N_BRANCH, #N_LOCAL_BRANCH, #PRE_COMMIT_GCN)

--let $actual_gcn= query_get_value("call dbms_xa.ac_prepare($my_xid, $ac_args)", GCN, 1)
if ($actual_gcn != 'No such row') {

  if ($expect_gcn) {
    --let $assert_text=expect_gcn == actual_gcn
    --let $assert_cond=$expect_gcn = $actual_gcn
    --source include/assert.inc
  }

  --disable_connect_log
  --connect(tmp_find_session, localhost, root,,)
  if ($expect_csr) {
    --let $actual_csr = query_get_value("call dbms_xa.find_by_xid($my_xid)", CSR, 1)
    --let $assert_text=expect_csr == actual_csr
    --let $assert_cond="$expect_csr" = "$actual_csr"
    --source include/assert.inc
  }
  --disconnect tmp_find_session
  --enable_connect_log
}
